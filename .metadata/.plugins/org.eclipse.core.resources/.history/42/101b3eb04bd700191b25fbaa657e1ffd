package curso2;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import java.util.TimeZone;

public class Datas {

	public static void main(String[] args) throws ParseException, InterruptedException {
		// TODO Auto-generated method stub
		SimpleDateFormat data1 = new SimpleDateFormat("dd/MM/yyyy");
		SimpleDateFormat data2 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
		SimpleDateFormat data3 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
		data3.setTimeZone(TimeZone.getTimeZone("GMT"));
		
		Date dt1 = data1.parse("14/09/2019");
		Date dt2 = data2.parse("14/09/2019 13:15:00");
		Date agora = new Date();
		Thread.sleep(1000);
		Date agora2 = new Date(System.currentTimeMillis());
		// Data original do java é 1 de janeiro de 1970 em milissegundos assim é armazenado
		// então se pedirmos uma data com valor 0 de milissegundos teremos
		// 21 horas do dia 31/12/1969
		Date zero = new Date(0L);
		
		// Data 5 horas da manhã de 1970 a partir do valor padrão do Date do java
		Date agora3 = new Date(1000L * 60L * 60L * 5L);
		
		// Padrão ISO 8601 no padrão UTC, por isso o horario mesmo sendo informado
		// é modificado pois o brasil está 3 horas atrasado no meridiano
		Date y3 = Date.from(Instant.parse("2019-06-25T16:32:05Z"));
		
		System.out.println("Data dt1: " + data1.format(dt1));
		System.out.println("Data dt2: " + data2.format(dt2));
		System.out.println("Data agora: " + data2.format(agora));
		System.out.println("Data agora2: " + data2.format(agora2));
		System.out.println("Data zero: " + data2.format(zero));
		
		// Neste caso dá 2 da manhã porque o horario no brasil é atrasado 3 horas em relação
		// ao meridiano de Greenwich
		System.out.println("5 horas da manhã de 1970: " + data2.format(agora3) );

	
		System.out.println("Data padrão UTC: " + data2.format(y3));
		
		// Agora o padrão UTC irá seguir o formato normal sem atraso nem 
		// adianto, no formato 0 do greenwich
		System.out.println("Data padrão UTC: " + data3.format(y3));
		
	}

}
